<?php

abstract class C_Controller{// cоздаем абстрактный класс
    // объекты классов, определенные, как абстрактные, 
    // не могут быть созданы, и любой класс, который содержит по крайней
    // мере один абстрактный метод, должен быть определен, 
    // как абстрактный. Методы, объявленные абстрактными, несут, по существу, 
    // лишь описательный смысл и 
    // не могут включать реализацию.

    protected abstract function render();//абстрактный метод который реализуется
    //в потомках render отвечает за заполнения контентом основной шаблон  с
    // помощью шаблонизатора
    //Модификатор protected (защищенный) 
    //разрешает доступ самому классу, 
    //наследующим его классам и родительским классам

    protected abstract function before();//абстрактный метод который запускается 
    // в патомках если его не запустить то работать код не будет
    //before запускается в патомке создает контент для главного шаблона

    public function Request($action){//для того чтобы понять работы этого кода нужно посмотерть
        // основной файл index.html в нем обрабатываеся запрос get и идкт выбор
        //какой метод запустить
        $this->before();

        $this->$action();// action может быть action_edit() или action_index()
        
        $this->render();
    

    }

    protected function isGet(){// если запрос get то return
    
        //проверка
    return $_SERVER['REQUEST_METHOD']=='GET';
    //Существует два способа отправки форм с 
    //клиента на сервер: GET и POST . Они определены в 
    //RFC 2616 (HTTP), но разница, которую вы можете непосредственно 
    //увидеть, заключается в том, что GET отображается в URL, а POST -нет.
    
    
    }
    
    protected function isPost(){
    
    //проверка
    return $_SERVER['REQUEST_METHOD']=='POST';
    //Существует два способа отправки форм с 
    //клиента на сервер: GET и POST . Они определены в 
    //RFC 2616 (HTTP), но разница, которую вы можете непосредственно 
    //увидеть, заключается в том, что GET отображается в URL, а POST -нет.
    
    }


    ///создаем шаблонизатор который будет отправлять данные в шаблон

    protected function Template( $fileName, $vars=array()){//принимает значения 
    //куда будет опралять контент и массив из которого будет брать данные
     foreach($vars as $k=>$v){
             $$k=$v;//благодоря $$ идет замена названия
            }

            ob_start();//включам буфер неужно для того чтобы в дальнейшем запускаить
            //cесию можно было не только с начала файла но с людого его места

            include "$fileName";//в буфере передаваемый файл

            return ob_get_clean();// Получает содержимое 
            //текущего буфера и затем удаляет текущий буфер

     
    
    }

    
}